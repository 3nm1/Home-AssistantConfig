blueprint:
  name: Camera Detection
  description: ''
  domain: automation
  input:
    notify_device:
      name: Device to notify
      description: Device needs to run the official Home Assistant app to receive
        notifications
      selector:
        device:
          integration: mobile_app
          multiple: false
    camera:
      name: Camera
      description: Camera for which this detection is running
      selector:
        entity:
          domain: camera
          multiple: false
    person_sensor:
      name: Person detection sensor
      description: Binary sensor which is on when a person is detected
      selector:
        entity:
          domain: binary_sensor
          multiple: false
    vehicle_sensor:
      name: Vehicle detection sensor
      description: Binary sensor which is on when a vehicle is detected
      selector:
        entity:
          domain: binary_sensor
          multiple: false
    store_location:
      name: Folder to store snapshots in
      description: Folder within your www folder where snapshots should be stored.
        Do not include www directory.
      default: doorbell
      selector:
        text: {}
    no_motion_wait:
      name: Time between notifications (seconds)
      description: Time in seconds to wait before sending another notification of
        motion (to avoid spamming).
      default: 0
      selector:
        number:
          min: 0.0
          max: 300.0
          unit_of_measurement: seconds
          step: 1.0
          mode: slider
    blocker_entity:
      name: (OPTIONAL) Blocking entity
      description: If this entity's state is on, it will prevent the automation from
        running. E.g. sleepmode or away mode.
      default:
      selector:
        entity:
          domain: binary_sensor
          multiple: false
  source_url: https://github.com/apollo1220/blueprints/blob/main/camera_detection_notification.yaml
mode: single
max_exceeded: silent
variables:
  notify_device: !input notify_device
  camera: !input camera
  blocker_entity: !input blocker_entity
  no_motion_wait: !input no_motion_wait
  store_location: !input store_location
trigger:
- platform: state
  entity_id: !input person_sensor
  from: 'off'
  to: 'on'
  id: person
- platform: state
  entity_id: !input vehicle_sensor
  from: 'off'
  to: 'on'
  id: vehicle
condition:
- condition: template
  value_template: '{{ (blocker_entity == none) or (states[blocker_entity].state ==
    ''off'') }}'
action:
- service: camera.snapshot
  data:
    filename: /config/www/{{store_location}}/{{ trigger.to_state.last_changed | as_timestamp
      | timestamp_custom("%Y-%m-%d_%H-%M-%S") }}.jpg
  target:
    entity_id: !input camera
- service: notify.mobile_app_{{ device_attr(notify_device, 'name').lower() }}
  data:
    title: Camera Detection
    message: '{{ state_attr(camera, ''friendly_name'') }} has detected a {{trigger.id}}'
    data:
      image: /local/{{store_location}}/{{ trigger.to_state.last_changed | as_timestamp
        | timestamp_custom("%Y-%m-%d_%H-%M-%S") }}.jpg
      channel: Motion
      importance: high
      ttl: 0
      priority: high
      notification_icon: mdi:cctv
- condition: template
  value_template: '{{ no_motion_wait != none }}'
- delay:
    seconds: '{{ no_motion_wait | int }}'
