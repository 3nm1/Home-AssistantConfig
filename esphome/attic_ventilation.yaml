---
# Attic Ventilation
#
# This ESPHome code is used on a Sonoff Dual R2.
# It controls our central ventilation system.
#
# The actual fan has 3 power inputs:
# 1: Should always get 230v (base voltag): Powers the device as well.
# 2: 230v input: Low speed.
# 3: 230v input: High speed.
#
# 1 is always on, 2 and 3 depends on the speed.
# Since there are only 2 speeds in that case, a SonOff Dual will do.
#
substitutions:
  label: esp03
  slug: attic_ventilation
  name: Attic Ventilation
  description: Control the central ventilation system of my home.
  api_password: !secret esphome_attic_ventilation_api_password
  ota_password: !secret esphome_attic_ventilation_ota_password

packages:
  <<: !include_dir_named common
  board: !include boards/esp01s.yaml

status_led:
  pin:
    number: GPIO13
    inverted: true

fan:
  - platform: speed
    id: the_fan
    name: "${name} Fan"
    output: output_fan
    speed_count: 2

output:
  - platform: template
    id: output_fan
    type: float
    write_action:
      - lambda: |-
          auto low  = id(switch_speed_low);
          auto high = id(switch_speed_high);
          if (state == 0.5) {
            low->turn_on();
          } else if (state == 1) {
            high->turn_on();
          } else {
            low->turn_off();
            high->turn_off();
          }

switch:
  - platform: gpio
    id: switch_speed_low
    pin: GPIO12
    restore_mode: ALWAYS_OFF
    interlock: &interlock_group [switch_speed_low, switch_speed_high]
  - platform: gpio
    id: switch_speed_high
    pin: GPIO5
    restore_mode: ALWAYS_OFF
    interlock: *interlock_group

binary_sensor:
  # Pushing the button on the device, changes the state of the fan:
  # It will cycle through low speed and high speed and off.
  - platform: gpio
    id: binary_sensor_button
    pin:
      number: GPIO10
      mode: INPUT_PULLUP
      inverted: true
    on_press:
      - lambda: |-
          auto fan = id(the_fan);
          if (fan->state) {
            if (fan->speed == 0.5) {
              fan->turn_on().set_speed(1);
            } else {
              fan->turn_off();
            }
          } else {
            fan->turn_on().set_speed(0.5);
          }
